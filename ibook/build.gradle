plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'  apply false
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'  apply false
    id 'java'
}


allprojects {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    group 'com.ibook'
    version '0.0.1.SNAPSHOT'

    repositories {
        mavenLocal()
        mavenCentral()
    }

}

ext {
    applicationInfo = [
            'author'   : 'Yaunde Zhankers',
            'language' : 'java',
            'crateDate': '2019/08/06'
    ]

    // 应用程序包名
    APPLICATION_ID = 'com.ibook'

    slf4jVersion = '1.7.25'
    annotationsVersion = "3.0.1u2"
    junitVersion = "4.11"
    hamcrestVersion = "1.3"
    guavaVersion = "23.3-jre"
    rxJavaVersion = "2.2.11"
    dubboVersion = "2.7.0"

}


subprojects { subject ->
    if (subject.name.endsWith("ibook-api") || subject.name.endsWith("ibook-fx")) return

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // some common deps shared by everything
    dependencies {

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
        implementation 'org.springframework.boot:spring-boot-starter-data-rest'
        implementation 'org.springframework.boot:spring-boot-starter-freemarker'
        // Spring MVC
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.apache.kafka:kafka-streams'
        implementation 'org.springframework.kafka:spring-kafka'
        runtimeOnly 'mysql:mysql-connector-java'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
        testImplementation 'io.projectreactor:reactor-test'
        testImplementation 'org.springframework.kafka:spring-kafka-test'

        testCompile group: 'junit', name: 'junit', version: "${junitVersion}"
        testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: "${hamcrestVersion}"

        compile(
                "org.slf4j:slf4j-api:${slf4jVersion}",
                'ch.qos.logback:logback-core:1.2.3',
                'ch.qos.logback:logback-classic:1.2.3',
                "com.google.code.findbugs:annotations:${annotationsVersion}",
                "com.google.guava:guava:${guavaVersion}",
                "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
                // "org.slf4j:jcl-over-slf4j:${slf4jVersion}",
                // "org.slf4j:slf4j-log4j12:${slf4jVersion}",
                // "c3p0:c3p0:0.9.1.2",
                // "org.springframework:spring-context:$springVersion",
                // "org.springframework:spring-orm:$springVersion",
                // "org.springframework:spring-tx:$springVersion",
                // "org.springframework.data:spring-data-jpa:1.5.2.RELEASE",
                // "org.hibernate:hibernate-entitymanager:$hibernateVersion",
                // "commons-fileupload:commons-fileupload:1.3.1",
        )
    }
}





